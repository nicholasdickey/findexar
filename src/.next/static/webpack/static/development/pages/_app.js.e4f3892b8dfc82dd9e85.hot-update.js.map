{"version":3,"file":"static/webpack/static/development/pages/_app.js.e4f3892b8dfc82dd9e85.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["//import 'babel-polyfill';\nimport \"regenerator-runtime/runtime\"\nimport React from 'react';\nimport { Provider } from 'react-redux'\nimport App from 'next/app';\nimport Head from 'next/head';\nimport Immutable from 'immutable'\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport withRedux from 'next-redux-wrapper'\nimport { initStore } from '../../lib/store'\nimport theme from '../theme';\nimport Root from 'window-or-global'\nclass MyApp extends App {\n    static async getInitialProps({ Component, ctx }) {\n        let pageProps = {};\n        if (Component.getInitialProps) {\n            pageProps = await Component.getInitialProps(ctx);\n        }\n        if (ctx.req && ctx.req.session.passport) {\n            pageProps.user = ctx.req.session.passport.user;\n        }\n        return { pageProps };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.pageProps.user\n        };\n    }\n    componentDidMount() {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n            jssStyles.parentNode.removeChild(jssStyles);\n        }\n    }\n\n    render() {\n        const { Component, pageProps, store } = this.props;\n        let meta = store && store.getState() && store.getState().app && store.getState().app.get ? store.getState().app.get(\"meta\") : null;\n        if (meta)\n            meta = meta.toJS();\n        else\n            meta = {};\n        let session = store && store.getState() && store.getState().session && store.getState().session ? store && store.getState() && store.getState().session && store.getState().session.toJS() : {};\n        let colorTheme = +(store && store.getState() && store.getState().session && store.getState().session.get ? store.getState().session.get(\"theme\") : 0);\n\n        //   console.log(\"RENDER APP:\", { session, theme: colorTheme, meta, Root })\n        if (Root.__CLIENT__)\n            Root.store = store;\n        let muiTheme = theme({ mode: colorTheme });\n        //  console.log('APP post creted muitheme:', muiTheme)\n        return (\n            <div>\n                <Head>\n                    <link rel=\"canonical\" href={meta.canonical} />\n                    <meta property=\"comment\" content=\"NOT FACEBOOK meta share\" />\n                    <meta property=\"ua\" content={meta.ua} />\n                    {meta.image_width ? <meta property=\"og:image:width\" content={meta.image_width} /> : null}\n                    {meta.image_height ? <meta property=\"og:image:height\" content={meta.image_height} /> : null}\n                    <meta property=\"og:type\" content=\"website\" />\n                    <meta property=\"og:title\" content={meta.title} />\n                    <meta name=\"description\" content={meta.description ? meta.description : ''} />\n                    <meta property=\"og:description\" content={meta.description ? meta.description : ''} />\n                    <meta property=\"og:site_name\" content={meta.site_name} />\n                    <meta property=\"og:url\" content={meta.url} />\n                    <meta property=\"og:image\" content={meta.image} />\n                    <link rel=\"shortcut icon\" type=\"image/png\" href={'/static/css/blue-bell.png'} />\n                    <meta property=\"og:author\" content={meta.author} />\n                    <meta property=\"dcterms.replaces\" content={meta.link} />\n                    <meta property=\"dcterms.identifier\" content={meta.tid} />\n                    <meta name=\"pjax-timeout\" content=\"1000\" />\n                    <meta name=\"is-dotcom\" content=\"true\" />\n                    <meta name=\"google-site-verification\" content=\"PMhSQkvtt0XVBm8DIMXJiwTkUpMODTShDIAs5q0zGXc\" />\n                    <meta property=\"cxid\" content={meta.cxid} />\n                    <meta property=\"txid\" content={meta.txid} />\n                    <meta property=\"channel\" content={meta.channel} />\n                    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n                    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n                    <meta name=\"msvalidate.01\" content=\"F6078DEB781FF7EEBAAF3723CBE56F5E\" />\n                    <title>My page</title>\n\n\n                </Head>\n                <ThemeProvider theme={muiTheme}>\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n                    <CssBaseline />\n                    <Provider store={store}>\n                        <Component {...pageProps} />\n                    </Provider>\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport default withRedux(initStore.bind(MyApp.route))(MyApp);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AAMA;;;;AAlFA;AACA;AAoFA;;;;A","sourceRoot":""}